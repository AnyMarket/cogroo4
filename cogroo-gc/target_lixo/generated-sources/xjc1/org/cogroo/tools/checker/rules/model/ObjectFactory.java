//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.06.17 at 01:24:02 PM BRT 
//


package org.cogroo.tools.checker.rules.model;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.cogroo.tools.checker.rules.model package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.cogroo.tools.checker.rules.model
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Mask }
     * 
     */
    public Mask createMask() {
        return new Mask();
    }

    /**
     * Create an instance of {@link Suggestion.ReplaceMapping }
     * 
     */
    public Suggestion.ReplaceMapping createSuggestionReplaceMapping() {
        return new Suggestion.ReplaceMapping();
    }

    /**
     * Create an instance of {@link Rule }
     * 
     */
    public Rule createRule() {
        return new Rule();
    }

    /**
     * Create an instance of {@link Pattern }
     * 
     */
    public Pattern createPattern() {
        return new Pattern();
    }

    /**
     * Create an instance of {@link Element }
     * 
     */
    public Element createElement() {
        return new Element();
    }

    /**
     * Create an instance of {@link Composition }
     * 
     */
    public Composition createComposition() {
        return new Composition();
    }

    /**
     * Create an instance of {@link Reference }
     * 
     */
    public Reference createReference() {
        return new Reference();
    }

    /**
     * Create an instance of {@link Example }
     * 
     */
    public Example createExample() {
        return new Example();
    }

    /**
     * Create an instance of {@link TagMask }
     * 
     */
    public TagMask createTagMask() {
        return new TagMask();
    }

    /**
     * Create an instance of {@link Suggestion.Swap }
     * 
     */
    public Suggestion.Swap createSuggestionSwap() {
        return new Suggestion.Swap();
    }

    /**
     * Create an instance of {@link Suggestion }
     * 
     */
    public Suggestion createSuggestion() {
        return new Suggestion();
    }

    /**
     * Create an instance of {@link TagReference }
     * 
     */
    public TagReference createTagReference() {
        return new TagReference();
    }

    /**
     * Create an instance of {@link Suggestion.Replace }
     * 
     */
    public Suggestion.Replace createSuggestionReplace() {
        return new Suggestion.Replace();
    }

    /**
     * Create an instance of {@link Boundaries }
     * 
     */
    public Boundaries createBoundaries() {
        return new Boundaries();
    }

    /**
     * Create an instance of {@link Rules }
     * 
     */
    public Rules createRules() {
        return new Rules();
    }

    /**
     * Create an instance of {@link ModificationHistory }
     * 
     */
    public ModificationHistory createModificationHistory() {
        return new ModificationHistory();
    }

    /**
     * Create an instance of {@link Operator }
     * 
     */
    public Operator createOperator() {
        return new Operator();
    }

    /**
     * Create an instance of {@link PatternElement }
     * 
     */
    public PatternElement createPatternElement() {
        return new PatternElement();
    }

}
