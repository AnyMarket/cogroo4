TYPESYSTEM TypeSystem;

IMPORT opennlp.uima.Token FROM TypeSystem AS cgToken;

SCRIPT Base;
Document{-> CALL(Base)};


DECLARE LEXEME_A, LEXEME_AS, LEXEME_A_OR_AS;
DECLARE PREPOSITION_A;
DECLARE ARTICLE_A;
DECLARE CRASE;
DECLARE CRASE_A;
DECLARE CRASE_AS;


DECLARE FEMALE_NOUN;
DECLARE MALE_NOUN;
DECLARE PLURAL_NOUN;
DECLARE SINGULAR_NOUN;

DECLARE PRON_TRATAMENTO;
DECLARE EM_RELACAO, COM_RELACAO;


DECLARE Annotation PROBLEM (String description);

DECLARE Annotation SUGGESTION (String text);  // Proposta de meio de indicar a correção, feita apenas em uma regra


cgToken{REGEXP(cgToken.lexeme, "a", true) -> LEXEME_A};
cgToken{REGEXP(cgToken.lexeme, "as", true) -> LEXEME_AS};
cgToken{OR(IS(LEXEME_A), IS(LEXEME_AS))-> LEXEME_A_OR_AS};
cgToken{AND(IS(PREPOSITION), IS(LEXEME_A_OR_AS)) -> PREPOSITION_A};
cgToken{AND(AND(AND(IS(ARTICLE), IS(FEMALE))), IS(LEXEME_A_OR_AS)) -> ARTICLE_A};
cgToken{AND(IS(PREPOSITION_A), IS(ARTICLE_A)) -> MARKONCE(CRASE)};

cgToken{AND(IS(CRASE), IS(SINGULAR)) -> MARKONCE(CRASE_A)};
cgToken{AND(IS(CRASE), IS(PLURAL))   -> MARKONCE(CRASE_AS)};


cgToken{AND(IS(MALE), IS(NOUN)) -> MALE_NOUN};
cgToken{AND(IS(FEMALE), IS(NOUN)) -> FEMALE_NOUN};
cgToken{AND(IS(PLURAL), IS(NOUN)) -> PLURAL_NOUN};
cgToken{AND(IS(SINGULAR), IS(NOUN)) -> SINGULAR_NOUN};



// rules 1 and 2
CRASE MALE_NOUN{NOT(IS(PROBLEM)) -> CREATE(PROBLEM, 1, 2, "description" = "Crase com substantivo masculino.")};

// rules 2 and 3
CRASE_A PLURAL_NOUN{NOT(IS(PROBLEM)) -> CREATE(PROBLEM, 1, 2, "description" = "Crase com substantivo no plural.")};

// rule 4
CRASE VERB{NOT(IS(PROBLEM)) -> CREATE(PROBLEM, 1, 2, "description" = "Crase antes de verbo.")};

// this rule was removed because it will become redundant as soon as the 95th rule is done
// CRASE_AS SINGULAR_NOUN{NOT(IS(PROBLEM)) -> CREATE(PROBLEM, 1, 2, "description" = "Crase com substantivo no singular.")};


// rules 5 e 6
cgToken{AND(NOT(IS(CRASE)), IS(LEXEME_A )) -> CREATE(SUGGESTION, "text" = "à")} cgToken{OR(IS(NUMERAL), IS(ARTICLE), IS(PRONOUN))} cgToken{REGEXP(cgToken.lexeme, "hora") -> CREATE(PROBLEM, 1, 2, 3, "description" = "Ocorre crase em expressões indicativas de horas.")};
cgToken{AND(NOT(IS(CRASE)), IS(LEXEME_AS)) -> CREATE(SUGGESTION, "text" = "às")} cgToken{OR(IS(NUMERAL), IS(ARTICLE), IS(PRONOUN))} cgToken{REGEXP(cgToken.lexeme, "horas") -> CREATE(PROBLEM, 1, 2, 3, "description" = "Ocorre crase em expressões indicativas de horas.")};

// rules 7 and 8
cgToken{AND(NOT(IS(CRASE)), IS(LEXEME_A))} cgToken{REGEXP(cgToken.lexeme, "(direita|esquerda)", true)} cgToken{REGEXP(cgToken.lexeme, "de", true) -> CREATE(PROBLEM, 1, 2, 3, "description" = "Ocorre crase em expressões indicativas de modo, tempo, lugar etc.")};

// rules 15 and 16
cgToken{REGEXP(cgToken.lexeme, "vossa_(senhoria|majestade|eminência|excelência|reverendíssima|santidade)", true) -> PRON_TRATAMENTO};
cgToken{REGEXP(cgToken.lexeme, "você", true) -> PRON_TRATAMENTO};
CRASE_A cgToken{IS(PRON_TRATAMENTO) -> CREATE(PROBLEM, 1, 2,  "description" = "Pronomes de tratamento não admitem artigo, logo não há crase aqui.")};

// rules 9 and 10
cgToken{REGEXP(cgToken.lexeme, "em_relação", true) ->  EM_RELACAO};
EM_RELACAO cgToken{AND(IS(LEXEME_A),  NOT(IS(CRASE)))} cgToken{AND(IS(NOUN), IS(FEMALE), IS(SINGULAR), NOT(IS(PROBLEM))) -> CREATE(PROBLEM, 1, 2, 3, 4, "description" = "\"Em relação\" rege a preposição \"a\", logo há crase aqui.")};
EM_RELACAO cgToken{AND(IS(LEXEME_AS), NOT(IS(CRASE)))} cgToken{AND(IS(NOUN), IS(FEMALE), IS(PLURAL  ), NOT(IS(PROBLEM))) -> CREATE(PROBLEM, 1, 2, 3, 4, "description" = "\"Em relação\" rege a preposição \"a\", logo há crase aqui.")};

// rules 11 and 12
cgToken{REGEXP(cgToken.lexeme, "com", true)} cgToken{REGEXP(cgToken.lexeme, "relação", true)  -> CREATE(COM_RELACAO, 1, 2, )};
COM_RELACAO cgToken{AND(IS(LEXEME_A ), NOT(IS(CRASE)))} cgToken{AND(IS(NOUN), IS(FEMALE), IS(SINGULAR), NOT(IS(PROBLEM))) -> CREATE(PROBLEM, 1, 2, 3, 4, "description" = "\"Com relação\" rege a preposição \"a\", logo há crase aqui.")};
COM_RELACAO cgToken{AND(IS(LEXEME_AS), NOT(IS(CRASE)))} cgToken{AND(IS(NOUN), IS(FEMALE), IS(PLURAL  ), NOT(IS(PROBLEM))) -> CREATE(PROBLEM, 1, 2, 3, 4, "description" = "\"Com relação\" rege a preposição \"a\", logo há crase aqui.")};

// rules 13 and 14
cgToken{REGEXP(cgToken.lexeme, "devido", true)} cgToken{AND(IS(LEXEME_A ), NOT(IS(CRASE)))} cgToken{AND(IS(NOUN), IS(FEMALE), IS(SINGULAR), NOT(IS(PROBLEM))) -> CREATE(PROBLEM, 1, 2, 3, 4, "description" = "\"Com relação\" rege a preposição \"a\", logo há crase aqui.")};
cgToken{REGEXP(cgToken.lexeme, "devido", true)} cgToken{AND(IS(LEXEME_AS), NOT(IS(CRASE)))} cgToken{AND(IS(NOUN), IS(FEMALE), IS(PLURAL  ), NOT(IS(PROBLEM))) -> CREATE(PROBLEM, 1, 2, 3, 4, "description" = "\"Com relação\" rege a preposição \"a\", logo há crase aqui.")};