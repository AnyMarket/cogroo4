PACKAGE cogroo.ruta;

TYPESYSTEM BaseTypeSystem;

IMPORT opennlp.uima.Token FROM TypeSystem AS cgToken;

DECLARE END_PRONOUN;
DECLARE END_NOS;

PERSONAL_PRONOUN {REGEXP(cgToken.lexeme, "-(me|te|se|lhe|nos|vos|lhes)", true) -> MARK(END_PRONOUN)};

// Rules 61 and 62
cgToken{REGEXP(cgToken.lexeme, "(não|nunca|ninguém|nada|jamais)", true)}
VERB 
END_PRONOUN
{ -> MARKONCE(PROBLEM, 1, 2, 3), CREATE(PROBLEM_INFO, 1, 2, 3,
    "description" = "As palavras de sentido negativo atraem o pronome átono para antes do verbo.",
    "suggestion" = "<Swap a=\"1\" b=\"2\"/>")};
    
// Rules 63 and 64
cgToken{REGEXP(cgToken.lexeme, "(nenhum|nenhuma)", true)}
NOUN
VERB 
END_PRONOUN
{ -> MARKONCE(PROBLEM, 1, 2, 3, 4), CREATE(PROBLEM_INFO, 1, 2, 3, 4,
    "description" = "As palavras de sentido negativo atraem o pronome átono para antes do verbo.",
    "suggestion" = "<Swap a=\"2\" b=\"3\"/>")};
    
// Rules 65 and 66
cgToken{REGEXP(cgToken.lexeme, "(que|quem|quando|se|porque)", true)}
VERB 
END_PRONOUN
cgToken{NOT(IS(VERB))
 -> MARKONCE(PROBLEM, 1, 2, 3, 4), CREATE(PROBLEM_INFO, 1, 2, 3, 4,
    "description" = "Os pronomes relativos e as conjunções subordinativas atraem o pronome para antes do verbo.",
    "suggestion" = "<Swap a=\"1\" b=\"2\"/>")};
    
// Rules 67 and 68
cgToken{REGEXP(cgToken.lexeme, "(sempre|já|bem|aqui|onde|mais|talvez|ainda|como)", true)}
VERB 
END_PRONOUN
cgToken{NOT(IS(VERB))
 -> MARKONCE(PROBLEM, 1, 2, 3), CREATE(PROBLEM_INFO, 1, 2, 3,
     "description" = "Certos advérbios (sempre, já, bem, aqui, onde, mais, talvez, ainda, como, por que) atraem o pronome para antes do verbo.",
    "suggestion" = "<Swap a=\"1\" b=\"2\"/>")};
    
// Rules 69 and 70
cgToken{REGEXP(cgToken.lexeme,"por",true)}
cgToken{REGEXP(cgToken.lexeme,"que",true)}
ARTICLE
NOUN
VERB
END_PRONOUN
{ -> MARKONCE(PROBLEM, 1, 2, 3, 4, 5, 6), CREATE(PROBLEM_INFO, 1, 2, 3, 4, 5, 6,
    "description" = "Certos advérbios (sempre, já, bem, aqui, onde, mais, talvez, ainda, como, por que) atraem o pronome para antes do verbo.",
    "suggestion" = "<Swap a=\"4\" b=\"5\"/>")};
    
// Rules 71 and 72
cgToken{REGEXP(cgToken.lexeme,"(tudo|pouco|algo)",true)}
VERB
END_PRONOUN
{ -> MARKONCE(PROBLEM, 1, 2, 3), CREATE(PROBLEM_INFO, 1, 2, 3,
    "description" = "Os pronomes indefinidos \"tudo, pouco, algo\" atraem o pronome para antes do verbo.",
    "suggestion" = "<Swap a=\"1\" b=\"2\"/>")};
    
// Rules 73 and 74
cgToken{REGEXP(cgToken.lexeme,"(só|ou|ora|quer)",true)}
VERB
END_PRONOUN
{ -> MARKONCE(PROBLEM, 1, 2, 3), CREATE(PROBLEM_INFO, 1, 2, 3,
    "description" = "\"só, ou, ora e quer\" atraem o pronome para antes do verbo.",
    "suggestion" = "<Swap a=\"1\" b=\"2\"/>")};